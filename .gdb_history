n
n
p lr
p l+r
p is_right
pvector is_right 
pbitset is_right
n
p i
p is_right
pbitset is_right
p i
p ans1
p ans2
n
p ans1
p ans2
n
kill
b main
run < input
n
p sum
p c
b main
run < input
b sol
c
p sum[i]-llen
p sum[i]
p i
p sum
p llen
p sum[i]
c
p sum[i]
p sim
p sum
b main
run < input
n
p sum
b main
run < input
n
p sum
n
b sol
run
c
run
c
n
s
p sum[i] -llen
p i
p sum
p llen
p c
p f
n
p ans1
b main
run < input
n
b sol
c
n
c
p sum[i] -llen
p sum[i]
p i
n
s
p llen
p sum[i]-llen
n
s
p sum[i]-llen
n
p ans1
s
p sum[i]-llen
n
p ans1
p ans2
n
n
p ans1
p sum
p i
p c
p sum[i]-llen
p i
p llen
p sum[i]
s
up
up
down
down
down
p sum[i]-llen
n
s
p sum[i]-llen
n
s
n
b main
run < input
n
p sum
run
b sol
c
p llen+c[i]
p i
b main
run < input
n
p sum
s
b sol
c
p sum[i]
p i
p i
n
p sum[i]-llen
p sum[i]
p llen
n
p sum[i]
p -llen
p llen
p c
p i
p i
p sum[i]
p sum[i]-llen
s
p llen
p sum[i]
p sum[i]-llen
p i
p sum
p c
n
p sum
p c
p i
p llen
p i-1
p i-1
p llen
p sum[i]-llen
p sum[i-1]-llen
p llen
pbitset is_right
n
s
p llen
p sum[i]-llen
p i
p sum[i
p sum
p llen
p i
p c
n
p i
p c
n
n
n
p ans1
p ans2
n
p llen
p sum[i]-llen
p c
info b
d 2
n
p llen
p sum[i]
p sum[i] -len
p sum[i] -llen
p c
n
p ans2
n
p sum[i]-llen
p llen
p llen
s
n
p c[i]
n
p ans1
s
n
p sum[i]-llen
s
p sum[i]-llen
n
s
p sum[i]-llen
n
p i
s
n
p ans2
p ans1
n
p ans2
p ans1
p ans2
n
p is_right
pbitset is_right 
n
n
pb is_right 
p i
n
p ans1
p ans2
n
n
pbitset is_right
n
p ans2
p ans1
n
pbitset is_right 
p cars
n
p is_right[0]
p is_right[1]
pbitset is_right 
n
c
b main
run < input
n
p n
s
p n
p idx
n
c
p idx
p n
info stack
