p v[1]
p v[2]
p v[3]
l
n
s
n
n
s
s
p x
kill
run
c
fin
n
p coins[0]
p coins[0]
p coins[1]
p coins[2]
n
p coins[0]
p coins[1]
p coins
p coins[0]
p coins[1]
p coins[2]
p coins[3]
p coins[4]
p coins[5]
p coins[6]
p coins.size()
run
n
p n
c
fin
n
p n
p coins
n
p coins[0]
p coins[0]
p coins[1]
p coins[2]
p coins[6]
p coins[7]
p coins[6]
p coins[5]
n
dashboard -output /dev/null
b main
run < input
dashboard -output /dev/pts/18
b main
run < input
n
p coins[6]
p coins[5]
p coins[4]
n
p coins[5]
p coins[6]
n
p coins[6]
n
p coins.size()
p n
p coins.end()
run
n
s
n
n
s
fin
s
n
n
n
s
n
run
c
up
p *it
p it
run
n
p coins.size()
run
n
n
p coins.size()
run
n
p coins.size()
run
n
p coins.size()
p coins
p coins[0]
run
n
p n
p coins.size()
n
c
run
y
n
p coins[6]
p coins[5]
p coins[7]
p coins[8]
p coins[9]
n
p coins.size()
s
p v.size()
p v
p v[0]
n
p sum
n
s
n
p v.begin()
p v.end()
p *v.end()
run
n
p coins.begin()
p coins.end()
n
p coins.begin()
p coins.end()
n
s
n
p v.begin()
p v.end()
p *v.end()
n
p v[6] = 0
p *v.end() = 0
p *v.end()
n
n
run
n
n
p coins[6]
p coins[6] = 0
p coins[6]
n
run
n
s
n
p sum
s
run
n
run
n
s
p *(int*)0x606010
p *(int*)0x606028
n
s
n
p v[6]
p *(int*)0x606028
n
p *(int*)0x606028
disp *(int*)0x606028
n
s
run
n
s
n
s
n
p *it
p x
kill
dashboard -output /dev/pts/12
b main
run < input
n
p coins
p coins[0]
p coins[1]
p coins[2]
p coins[3]
p coins[4]
p coins[5]
p coins[6]
n
b main
run < inpu
run < input
n
pvector coins
b main
run < input
n
pvector coins
p coins.size()
b main
run < input
n
p coins
pvector coins
b main
run < input
n
p n
p d
p r
n
pvector m
p m
p e
n
b main
run < input
n
p m
p e
n
n
p d
n
p ans
n
p ans
p r
n
b main
run < input
n
p n
n
p n
p s
pstring s
n
p ans
pstring s
n
n
p i
pstring s
